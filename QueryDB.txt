-- \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
-- DATABASE
-- \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

DROP DATABASE ugto; -- Delete when done
CREATE DATABASE UGTO;
USE UGTO;

-- \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
-- TABLAS
-- \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

CREATE TABLE Personas(
	idPersona int not null auto_increment primary key,
	Nombre varchar(25) not null,
	ApellidoP VARCHAR(25) not null,
	ApellidoM varchar(25) not  null,
	Edad int,
	Sexo varchar(1) not null, -- M = Masculino, F = Femenino, N = No binario
	RFC varchar(12) not null,
	Correo varchar(50) not null,
	Telefono varchar(10) not null,
	CURP varchar(18) not null);


CREATE TABLE Carrera(
    idCarrera int not null auto_increment primary key,
	Nombre varchar(50) not null);

CREATE TABLE Alumnos(
    NUA varchar(6) not null primary key,
	idPersona int,
	foreign key(idPersona) REFERENCES Personas (idPersona),
	idCarrera int,
	Semestre varchar(2) not null,
	Promedio varchar(5) not null,
	mensaje varchar(200) Default "No tienes mensajes");

create table Administrativos(
    NUE varchar(6) not null primary key, 
	idPersona int,
	Foreign key(idPersona) References Personas (idPersona),
	pendientes varchar (200) default "No hay pendientes");

create table estado(
    idStatus int not null auto_increment primary key,
	Status varchar(1) not null, -- 0 = Enviado, 1 = Aceptado, 2 = Modificado, 3 = Rechazado
	Descripcion text);
    
CREATE table Subarea(
	idSubarea int not null AUTO_INCREMENT PRIMARY KEY,
	nombreArea varchar (30));

CREATE table actividad (
    idActividad int not null auto_increment primary key,
   	titulo varchar (200) not null,
    descripcion text not null,
    idSubarea int,
    Foreign key(idSubarea) References Subarea (idSubarea),
    idCarrera int,
    Foreign key(idCarrera) References Carrera (idCarrera),
    NUA varchar(6),
    Foreign key(NUA) References Alumnos (NUA),  
    fechaInicio date not null,
    fechaFin date not null,
    noHoras int not null,
    organizador varchar (100),
    evidencia blob,
    idStatus varchar (1) DEFAULT '0', 
    Foreign key(idStatus) References estados (idStatus));
    
CREATE TABLE avance (
    idavance int not null AUTO_INCREMENT PRIMARY KEY,
    NUA varchar(6),
    Foreign key(NUA) References Alumnos (NUA),	
    idSubarea int,
    Foreign key(idSubarea) References Subarea (idSubarea),
    creditos decimal (5,2) NOT null DEFAULT 0,
    creditosFaltan decimal (5,2) not null,
    noActividades int not null DEFAULT 0,
    porcentaje int not null DEFAULT 0);
    

-- \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
-- STORED PROCEDURES
-- \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

-- //////////////// Inserta una actividad
DELIMITER $$
CREATE PROCEDURE sp_insertActividades(
    in titulo varchar (200),
    in descripcion text,
    in idSubarea int,
    in idCarrera int,
    in NUA int,
	in fechaInicio date,
	in fechaFin date,
	in noHoras int,
	in organizador varchar (100),
	in evidencia blob,
	in idStatus varchar (1))
BEGIN
    INSERT into actividad (titulo, descripcion,idSubarea, idCarrera, NUA, fechaInicio, fechaFin, noHoras, organizador, evidencia, idStatus)
    VALUES(UPPER(titulo), UPPER(descripcion),idSubarea, idCarrera, NUA, fechaInicio, fechaFin, noHoras, UPPER(organizador), evidencia, idStatus);
END $$

-- //////////////// Inserta un alumno
DELIMITER $$
CREATE PROCEDURE sp_insertAlumnos(
    in Nombre varchar(25),
    in ApellidoP VARCHAR(25),
    in ApellidoM varchar(25),
    in Edad int,
	in Sexo varchar(1),
	in RFC varchar(12),
	in Correo varchar(50),
	in Telefono varchar(50),
	in CURP varchar(18),
	in idCarrera int,
	in Semestre varchar(2),
	in Promedio varchar(5) )
BEGIN
	-- Personas
    INSERT into Personas (Nombre, ApellidoP, ApellidoM, Edad, Sexo, RFC, Correo, Telefono, CURP)
    VALUES (UPPER(Nombre), UPPER(ApellidoP), UPPER(ApellidoM), Edad, Sexo, UPPER(RFC), Correo, Telefono, UPPER(CURP));
    -- Alumnos
    INSERT into Personas (NUA, idCarrera, Semestre, Promedio)
    VALUES (NUA, idCarrera, Semestre, Promedio);
END $$

-- //////////////// Inserta un administrador
DELIMITER $$
CREATE PROCEDURE sp_insertAdmin(
    in Nombre varchar(25),
    in ApellidoP VARCHAR(25),
    in ApellidoM varchar(25),
    in Edad int,
	in Sexo varchar(1),
	in RFC varchar(12),
	in Correo varchar(50),
	in Telefono varchar(50),
	in CURP varchar(18),
	in NUE varchar(6) )
BEGIN
	-- Personas
    INSERT into Personas (Nombre, ApellidoP, ApellidoM, Edad, Sexo, RFC, Correo, Telefono, CURP)
    VALUES (UPPER(Nombre), UPPER(ApellidoP), UPPER(ApellidoM), Edad, Sexo, UPPER(RFC), Correo, Telefono, UPPER(CURP));
    -- Administrativos
    INSERT into Personas (NUE)
    VALUES (NUE);
END $$

-- //////////////// Actualiza el estado de una actividad
DELIMITER $$
CREATE PROCEDURE sp_cambiarStatus(
    in idAct int,
    in nuevoStatus varchar(1))
BEGIN
    UPDATE actividad 
    SET idStatus = nuevoStatus
	WHERE idActividad = idAct;
END $$
    
-- \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
-- Triggers
-- \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

    
    
    
